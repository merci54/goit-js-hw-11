{"version":3,"file":"index.js","sources":["../src/js/refs.js","../src/js/render-functions.js","../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["export const refs = {\n    form: document.querySelector('.form'),\n    input: document.querySelector('.form input'),\n    gallery: document.querySelector('.gallery'),\n    loader: document.querySelector('.loader'),\n}\n\n","import { refs } from \"./refs\";\n\nimport SimpleLightbox from \"simplelightbox\";\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\nlet galleryBox;\n\n// рендер списку зображень\nexport function createGallery(images) {\n\n    // видалення лоадеру\n    hideLoader();\n\n    // створення лайтбоксу\n    setTimeout(() => {\n        if (galleryBox) {\n            galleryBox.refresh()\n        }\n\n        galleryBox = new SimpleLightbox('.gallery a', {\n            captionsData: 'alt',\n            captionDelay: 250\n        });\n    }, 100);\n\n    return images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n        <li class=\"img-card\">\n            <div class=\"img-block\">\n                <a class=\"big-image\" href=\"${largeImageURL}\">\n                    <img class=\"image\" src=\"${webformatURL}\" alt=\"${tags}\" />\n                </a>\n            </div>\n            \n            <div class=\"info-block\">\n                <div>\n                    <h2>Likes</h2>\n                    <p>${likes}</p>\n                </div>\n                <div>\n                    <h2>Views</h2>\n                    <p>${views}</p>\n                </div>\n                <div>\n                    <h2>Comments</h2>\n                    <p>${comments}</p>\n                </div>\n                <div>\n                    <h2>Downloads</h2>\n                    <p>${downloads}</p>\n                </div>\n            </div>\n        </li>\n        `).join(\"\");\n}\n\n// очистка галереї\nexport function clearGallery() {\n    refs.gallery.innerHTML = '';\n}\n\nexport function showLoader() {\n    refs.loader.classList.remove('hidden');\n}\n\nexport function hideLoader() {\n    refs.loader.classList.add('hidden');\n}","\nimport axios from \"axios\";\nimport { showLoader } from \"./render-functions\";\n\nconst API = '50766581-35cab7d84125eeb0dc75e938a';\nconst API_URL = 'https://pixabay.com/api/';\n\n\nexport function getImagesByQuery(query) {\n    //показ лоадеру при початку отримання інформації\n    showLoader();\n\n    // отримання даних\n    return axios(API_URL, {\n        params: {\n            key: API,\n            q: query,\n            image_type: 'photo',\n            orientation: \"horizontal\",\n            safesearch: 'true',\n        }\n    })\n\n}\n","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport { refs } from \"./js/refs\";\nimport { getImagesByQuery } from './js/pixabay-api'\nimport { clearGallery } from \"./js/render-functions\";\nimport { hideLoader } from \"./js/render-functions\";\nimport { createGallery } from \"./js/render-functions\";\n\n\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n    // очистка галереї\n    clearGallery();\n\n  // перевірка значення інпуту\n  if (!refs.input.value.trim()) {\n    iziToast.error({\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n                position: 'topRight',\n\n            })\n    return\n  }\n\n\n  getImagesByQuery(refs.input.value.trim())\n  .then(({ data }) => {\n    // рендер галереї\n    refs.gallery.innerHTML = createGallery(data.hits);\n\n    // якщо не знайшло жодного результату\n    if (data.hits.length === 0) {\n\n        // сповіщення для користувачів\n        iziToast.error({\n            message: 'Sorry, there are no images matching your search query. Please try again!',\n            position: 'topRight',\n        })\n    }})\n    .catch(error => {\n\n    // приховання лоадеру якщо виникла помилка\n    hideLoader();\n    iziToast.error({\n      message: `${error.message}`,\n      position: 'topRight',\n  })\n\n  })\n\n\n}\n\n"],"names":["refs","galleryBox","createGallery","images","hideLoader","SimpleLightbox","webformatURL","largeImageURL","tags","likes","views","comments","downloads","clearGallery","showLoader","API","API_URL","getImagesByQuery","query","axios","handleSubmit","e","iziToast","data","error"],"mappings":"owBAAO,MAAMA,EAAO,CAChB,KAAM,SAAS,cAAc,OAAO,EACpC,MAAO,SAAS,cAAc,aAAa,EAC3C,QAAS,SAAS,cAAc,UAAU,EAC1C,OAAQ,SAAS,cAAc,SAAS,CAC5C,ECAA,IAAIC,EAGG,SAASC,EAAcC,EAAQ,CAGlC,OAAAC,IAGA,WAAW,IAAM,CACTH,GACAA,EAAW,QAAS,EAGxBA,EAAa,IAAII,EAAe,aAAc,CAC1C,aAAc,MACd,aAAc,GAC1B,CAAS,CACJ,EAAE,GAAG,EAECF,EAAO,IAAI,CAAC,CAAE,aAAAG,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAW,IAAK;AAAA;AAAA;AAAA,6CAGvDL,CAAa;AAAA,8CACZD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAO/CC,CAAK;AAAA;AAAA;AAAA;AAAA,yBAILC,CAAK;AAAA;AAAA;AAAA;AAAA,yBAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,yBAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,SAIzB,EAAE,KAAK,EAAE,CAClB,CAGO,SAASC,GAAe,CAC3Bb,EAAK,QAAQ,UAAY,EAC7B,CAEO,SAASc,GAAa,CACzBd,EAAK,OAAO,UAAU,OAAO,QAAQ,CACzC,CAEO,SAASI,GAAa,CACzBJ,EAAK,OAAO,UAAU,IAAI,QAAQ,CACtC,CC9DA,MAAMe,EAAM,qCACNC,EAAU,2BAGT,SAASC,EAAiBC,EAAO,CAEpC,OAAAJ,IAGOK,EAAMH,EAAS,CAClB,OAAQ,CACJ,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MACf,CACT,CAAK,CAEL,CCbAlB,EAAK,KAAK,iBAAiB,SAAUoB,CAAY,EAEjD,SAASA,EAAaC,EAAG,CAOvB,GANAA,EAAE,eAAc,EAGdR,IAGE,CAACb,EAAK,MAAM,MAAM,KAAI,EAAI,CAC5BsB,EAAS,MAAM,CACH,QAAS,2EACT,SAAU,UAE1B,CAAa,EACT,MACD,CAGDL,EAAiBjB,EAAK,MAAM,MAAM,KAAI,CAAE,EACvC,KAAK,CAAC,CAAE,KAAAuB,KAAW,CAElBvB,EAAK,QAAQ,UAAYE,EAAcqB,EAAK,IAAI,EAG5CA,EAAK,KAAK,SAAW,GAGrBD,EAAS,MAAM,CACX,QAAS,2EACT,SAAU,UACtB,CAAS,CACJ,CAAC,EACD,MAAME,GAAS,CAGhBpB,IACAkB,EAAS,MAAM,CACb,QAAS,GAAGE,EAAM,OAAO,GACzB,SAAU,UAChB,CAAG,CAEH,CAAG,CAGH"}